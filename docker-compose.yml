version: "3"
services:
    traefik:
        image: traefik:v2.0
        restart: always
        container_name: traefik
        ports:
          - "80:80"
          - "443:443"
        command:
          - "--api.insecure=false"
          - "--api.dashboard=false"
          - "--providers.docker=true"
          - "--providers.docker.exposedbydefault=false"
          - "--providers.docker.network=web"
          - "--entryPoints.web.address=:80"
          - "--entryPoints.websecure.address=:443"
          - "--certificatesResolvers.le.acme.storage=acme.json"
          - "--certificatesResolvers.le.acme.tlsChallenge=true"
          - "--certificatesResolvers.le.acme.httpChallenge=true"
          - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ./acme.json:/acme.json
        networks:
          - web
        labels:
          # Redirect all HTTP to HTTPS permanently
          - traefik.enable=true
          - traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)
          - traefik.http.routers.http_catchall.entrypoints=web
          - traefik.http.routers.http_catchall.middlewares=https_redirect
          - traefik.http.middlewares.https_redirect.redirectscheme.scheme=https
          - traefik.http.middlewares.https_redirect.redirectscheme.permanent=true
    
    uberneeds:
        container_name: uberneeds
        build: ./flaskapp
        ports:
        - "8008"
        networks:
            - web
        labels:
        - traefik.enable=true
        - traefik.http.routers.uberneeds.rule=Host(`${DOMAIN}`)
        - traefik.http.routers.uberneeds.tls=true
        - traefik.http.routers.uberneeds.tls.certresolver=le
        - traefik.http.middlewares.uberneeds.compress=true
        - traefik.http.routers.uberneeds.middlewares=uberneeds@docker

networks:
    web:
        external: true